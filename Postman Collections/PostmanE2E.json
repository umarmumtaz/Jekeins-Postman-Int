{
	"info": {
		"_postman_id": "6e5bb28c-8228-403f-92ee-b983f8ecb099",
		"name": "Testing with docker server",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get",
			"item": [
				{
					"name": "products listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6b2592-597e-488b-a07e-a61a855a55a1",
								"exec": [
									"pm.test(\"Status code is Success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test('Response body contains expected data', function () {\r",
									"    // Parse the response body from JSON string to JavaScript object\r",
									"    var responseBody = pm.response.json();\r",
									"    // Check if the response body contains the expected key-value pairs\r",
									" pm.expect(responseBody.upc).to.equal('041333216010');\r",
									"    pm.expect(responseBody.price).to.equal('5.99');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ad6ad997-c90f-40a4-8965-f65bbcf9e973",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const schemaTest = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"total\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"limit\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"skip\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"price\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"upc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"shipping\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"manufacturer\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"model\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"image\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"createdAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categories\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"name\",\r",
									"            \"type\",\r",
									"            \"price\",\r",
									"            \"upc\",\r",
									"            \"shipping\",\r",
									"            \"description\",\r",
									"            \"manufacturer\",\r",
									"            \"model\",\r",
									"            \"url\",\r",
									"            \"image\",\r",
									"            \"createdAt\",\r",
									"            \"updatedAt\",\r",
									"            \"categories\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"total\",\r",
									"    \"limit\",\r",
									"    \"skip\",\r",
									"    \"data\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"validate the json response schema\",function(){\r",
									"pm.response.to.have.jsonSchema(schemaTest);\r",
									"pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6111b1fe-1100-4fac-b372-ee336ffa7d4b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id=9999862",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "9999862"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch with variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const testVariable1 = pm.response.json();",
									"console.log(testVariable1)",
									"",
									"pm.test(\"verify the value with inputing the variable\",function(){",
									"    pm.expect(testVariable1[0].name).to.eql(pm.collectionVariables.get(\"user_name\"))",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "72e52167-e995-48c1-a47e-5e887b2e838b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id=9999862",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "9999862"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get product by variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const schemaTest = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"total\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"limit\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"skip\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"price\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"upc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"shipping\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"manufacturer\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"model\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"image\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"createdAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categories\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"name\",\r",
									"            \"type\",\r",
									"            \"price\",\r",
									"            \"upc\",\r",
									"            \"shipping\",\r",
									"            \"description\",\r",
									"            \"manufacturer\",\r",
									"            \"model\",\r",
									"            \"url\",\r",
									"            \"image\",\r",
									"            \"createdAt\",\r",
									"            \"updatedAt\",\r",
									"            \"categories\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"total\",\r",
									"    \"limit\",\r",
									"    \"skip\",\r",
									"    \"data\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"validate the json response schema\",function(){\r",
									"pm.response.to.have.jsonSchema(schemaTest);\r",
									"pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bfa791ab-dcf0-4139-aa4b-d4674d0a20eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id={{product_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{product_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories listing",
					"id": "1c882592-1233-4bc7-81d7-d6f698049537",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/categories"
					},
					"response": []
				}
			],
			"id": "2f3b7e84-1c82-4db7-af6c-086654be818b",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9c2a38c3-a40e-4441-b911-b15abf5ee56c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "dcd77910-4264-48cd-9737-bf727c96fb0e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Verify response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Post products",
			"item": [
				{
					"name": "Add product using variables collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f80813d-8878-4375-8dc5-1843507e28a1",
								"exec": [
									"// Check the response status code TC -01 -Assertions -",
									"",
									"",
									"pm.test(\"Status code is Success\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"// Check the response body TC 02",
									"pm.test('Response body contains expected data', function () {",
									"    // Parse the response body from JSON string to JavaScript object",
									"    var responseBody = pm.response.json();",
									"    console.log(responseBody)",
									"    console.log(responseBody.id)",
									"    const productid=responseBody.id;",
									"    pm.collectionVariables.set(\"product_id\",productid )",
									"    // Check if the response body contains the expected key-value pairs",
									"    pm.expect(responseBody.manufacturer).to.equal('Duracell');",
									"    pm.expect(responseBody.model).to.equal('MN1500B8Z');",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33fe4c94-bfcd-4bb9-bfbb-512574ee658a",
								"exec": [
									"//dynamicall generated variables for ups that is settingup the logic\r",
									"\r",
									"const code =( pm.globals.get(\"companyCode\")) ;\r",
									"console.log(code);\r",
									"const value =pm.variables.replaceIn('{{$randomInt}}');\r",
									"pm.collectionVariables.set('upc', code+value);\r",
									"pm.collectionVariables.set('user_name', 'Umar');"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0e74c300-f251-485c-b385-59a1e732286b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{user_name}}\",\r\n    \"type\": \"mobile\",\r\n    \"price\": 451,\r\n    \"upc\": \"{{upc}}\",\r\n    \"shipping\": 0,\r\n    \"description\": \"Compatible with select electronic devices; AA size; DURALOCK Power Preserve technology; 8-pack\",\r\n    \"manufacturer\": \"Duracell\",\r\n    \"model\": \"MN1500B8Z\",\r\n    \"url\": \"http://www.bestbuy.com/site/duracell-aa-batteries-8-pack/127687.p?id=1051384045676&skuId=127687&cmp=RMXCC\",\r\n    \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1276/127687_sa.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "delete product",
					"id": "69789979-3690-40a7-9f56-e22d3fd801d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 45\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products?id={{product_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{product_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verify message and schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									"// const responseBodyD = pm.response.json();\r",
									"\r",
									"// pm.test(\"test the code/response message after post \", function(){\r",
									"// pm.response.to.have.status(500);\r",
									"// pm.expect(responseBodyD).to.have.property('error');\r",
									"// pm.expect(responseBodyD.error).to.eql('Email address already exists')\r",
									"\r",
									"\r",
									"// });\r",
									"\r",
									"const validateSchema={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"msg\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"msg\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"\r",
									"\r",
									"const responseBodyD = pm.response.json();\r",
									"pm.test(\"verify the response message after post request \", function(){\r",
									"pm.expect(responseBodyD).to.have.property('msg');\r",
									"pm.expect(responseBodyD.msg).to.eql(\"Student added\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "54386b2e-bed8-4af3-8713-c14f67c19250",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"firstName\": \"nanncy1\",\r\n        \"lastName\": \"kevin1\",\r\n        \"email\": \"test2dcffcdd2d@gmail.com\",\r\n        \"programme\": \"CS\",\r\n        \"courses\": [\r\n            \"IT\",\r\n            \"QA\"\r\n        ]\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8090/student/"
					},
					"response": []
				},
				{
					"name": "verify header with assertions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									"const responseBodyD = pm.response.json();\r",
									"\r",
									"pm.test('test the code/response message after post ', function () {\r",
									"    pm.response.to.have.status(500);\r",
									"    pm.expect(responseBodyD).to.have.property('error');\r",
									"    pm.expect(responseBodyD.error).to.eql('Email address already exists');\r",
									"})\r",
									"\r",
									"pm.test(\"Validate the headers values\",function(){\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
									"pm.expect(pm.response.responseTime).to.be.below(1000)\r",
									" pm.expect(pm.response.text()).to.include(\"Email address already exists\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4650495c-3264-457f-ac37-be2260e5fd3a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"firstName\": \"nanncy1\",\r\n        \"lastName\": \"kevin1\",\r\n        \"email\": \"test2dcffcdd2d@gmail.com\",\r\n        \"programme\": \"CS\",\r\n        \"courses\": [\r\n            \"IT\",\r\n            \"QA\"\r\n        ]\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8090/student/"
					},
					"response": []
				}
			],
			"id": "843fa981-91d7-4297-8cff-53a25db41b3b"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3fce1d32-a844-4802-8695-c28f6f41865c",
				"type": "text/javascript",
				"exec": [
					"// console.log (\"hello world....\"); //print simple text",
					"// let urlVar = pm.variables.get(\"url\"); ",
					"// console.log(\"value for url variable is \"+urlVar); //print base url or set ones",
					"// pm.variables.set(\"set variable POSTMAN\",\"print out this one\");   ",
					"// console.log(pm.variables.get(\"set variable POSTMAN\")); //simplly printout the postman set comman",
					"// let globalvar=pm.globals.get(\"Env\");",
					"// console.log(globalvar);",
					"// let globalvar2 =pm.globals.get(\"Name\");",
					"// console.log(globalvar2);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a3dba287-3682-442c-bb57-1c1dbbe0ad02",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8091",
			"type": "string"
		},
		{
			"key": "upc",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": ""
		},
		{
			"key": "price_value",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_name",
			"value": ""
		}
	]
}