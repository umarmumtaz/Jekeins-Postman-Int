{
	"info": {
		"_postman_id": "6e5bb28c-8228-403f-92ee-b983f8ecb099",
		"name": "Testing with docker server",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get",
			"item": [
				{
					"name": "products listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6b2592-597e-488b-a07e-a61a855a55a1",
								"exec": [
									"pm.test(\"Status code is Success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test('Response body contains expected data', function () {\r",
									"    // Parse the response body from JSON string to JavaScript object\r",
									"    var responseBody = pm.response.json();\r",
									"    // Check if the response body contains the expected key-value pairs\r",
									" pm.expect(responseBody.upc).to.equal('upc_name');\r",
									"    pm.expect(responseBody.price).to.equal('5.99');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ad6ad997-c90f-40a4-8965-f65bbcf9e973",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "just product listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6b2592-597e-488b-a07e-a61a855a55a1",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6e39a067-3728-4c97-a6c7-1b511fad8d46",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "just product listing Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6b2592-597e-488b-a07e-a61a855a55a1",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "39142cf3-af13-4905-a342-3efd66a9b275",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const schemaTest = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"total\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"limit\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"skip\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"price\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"upc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"shipping\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"manufacturer\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"model\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"image\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"createdAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categories\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"name\",\r",
									"            \"type\",\r",
									"            \"price\",\r",
									"            \"upc\",\r",
									"            \"shipping\",\r",
									"            \"description\",\r",
									"            \"manufacturer\",\r",
									"            \"model\",\r",
									"            \"url\",\r",
									"            \"image\",\r",
									"            \"createdAt\",\r",
									"            \"updatedAt\",\r",
									"            \"categories\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"total\",\r",
									"    \"limit\",\r",
									"    \"skip\",\r",
									"    \"data\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"validate the json response schema\",function(){\r",
									"pm.response.to.have.jsonSchema(schemaTest);\r",
									"pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "6111b1fe-1100-4fac-b372-ee336ffa7d4b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products?id=10000003",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "10000003"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "single product 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "188fb4c5-77fb-4440-aa56-5bea88339e45",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id=9999862",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "9999862"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch with variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const testVariable1 = pm.response.json();",
									"",
									"console.log(testVariable1)",
									"",
									"pm.test(\"verify the value with inputing the variable\",function(){",
									"    pm.expect(testVariable1.data[0].name).to.eql(pm.collectionVariables.get(\"user_name\"))",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "72e52167-e995-48c1-a47e-5e887b2e838b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id=9999891",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "9999891"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get product by variable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb7e7fcc-6ae2-48ec-b4d5-d931e96db5be",
								"exec": [
									"const schemaTest = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"total\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"limit\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"skip\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"type\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"price\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"upc\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"shipping\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"description\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"manufacturer\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"model\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"url\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"image\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"createdAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"updatedAt\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"categories\": {\r",
									"              \"type\": \"array\",\r",
									"              \"items\": {}\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"id\",\r",
									"            \"name\",\r",
									"            \"type\",\r",
									"            \"price\",\r",
									"            \"upc\",\r",
									"            \"shipping\",\r",
									"            \"description\",\r",
									"            \"manufacturer\",\r",
									"            \"model\",\r",
									"            \"url\",\r",
									"            \"image\",\r",
									"            \"createdAt\",\r",
									"            \"updatedAt\",\r",
									"            \"categories\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"total\",\r",
									"    \"limit\",\r",
									"    \"skip\",\r",
									"    \"data\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"pm.test(\"validate the json response schema\",function(){\r",
									"pm.response.to.have.jsonSchema(schemaTest);\r",
									"pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bfa791ab-dcf0-4139-aa4b-d4674d0a20eb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products?id={{product_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{product_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Categories listing",
					"id": "1c882592-1233-4bc7-81d7-d6f698049537",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/categories"
					},
					"response": []
				}
			],
			"id": "2f3b7e84-1c82-4db7-af6c-086654be818b",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9c2a38c3-a40e-4441-b911-b15abf5ee56c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "dcd77910-4264-48cd-9737-bf727c96fb0e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Verify status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Verify response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Post products",
			"item": [
				{
					"name": "Add product using variables collection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f80813d-8878-4375-8dc5-1843507e28a1",
								"exec": [
									"pm.test('Status code is Success', function () {",
									"    pm.response.to.have.status(201);",
									"})",
									"",
									"pm.test('Successful POST request', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([",
									"        201,",
									"        202",
									"    ]);",
									"})",
									"",
									"pm.test('Response body contains expected data', function () {",
									"    var responseBody = pm.response.json();",
									"    console.log(responseBody);",
									"    console.log(responseBody.id);",
									"    const productid = responseBody.id;",
									"    pm.collectionVariables.set('product_id', productid);",
									"    pm.expect(responseBody.manufacturer).to.equal('Duracell');",
									"    pm.expect(responseBody.model).to.equal('MN1500B8Z');",
									"})",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33fe4c94-bfcd-4bb9-bfbb-512574ee658a",
								"exec": [
									"//dynamicall generated variables for ups that is settingup the logic\r",
									"\r",
									"const code =( pm.globals.get(\"companyCode\")) ;\r",
									"console.log(code);\r",
									"const value =pm.variables.replaceIn('{{$randomInt}}');//random\r",
									"pm.collectionVariables.set('upc', code+value);\r",
									"pm.collectionVariables.set('user_name', 'Umar');//static value"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0e74c300-f251-485c-b385-59a1e732286b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{user_name}}\",\r\n    \"type\": \"mobile\",\r\n    \"price\": 451,\r\n    \"upc\": \"{{upc}}\",\r\n    \"shipping\": 0,\r\n    \"description\": \"Compatible with select electronic devices; AA size; DURALOCK Power Preserve technology; 8-pack\",\r\n    \"manufacturer\": \"Duracell\",\r\n    \"model\": \"MN1500B8Z\",\r\n    \"url\": \"http://www.bestbuy.com/site/duracell-aa-batteries-8-pack/127687.p?id=1051384045676&skuId=127687&cmp=RMXCC\",\r\n    \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1276/127687_sa.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "Test with CSV",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f80813d-8878-4375-8dc5-1843507e28a1",
								"exec": [
									"pm.test('Status code is Success', function () {",
									"    pm.response.to.have.status(201);",
									"})",
									"",
									"pm.test('Successful POST request', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([",
									"        201,",
									"        202",
									"    ]);",
									"})",
									"",
									"pm.test('Response body contains expected data', function () {",
									"    var responseBody = pm.response.json();",
									"    console.log(responseBody);",
									"    console.log(responseBody.id);",
									"    const productid = responseBody.id;",
									"    pm.collectionVariables.set('product_id', productid);",
									"    pm.expect(responseBody.manufacturer).to.equal('Duracell');",
									"    pm.expect(responseBody.model).to.equal('MN1500B8Z');",
									"})",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33fe4c94-bfcd-4bb9-bfbb-512574ee658a",
								"exec": [
									"//dynamicall generated variables for ups that is settingup the logic\r",
									"\r",
									"const code =( pm.globals.get(\"companyCode\")) ;\r",
									"console.log(code);\r",
									"const value =pm.variables.replaceIn('{{$randomInt}}');//random\r",
									"pm.collectionVariables.set('upc_name', code+value);\r",
									"//test with import data from CSV\r",
									"pm.collectionVariables.set(\"user_name\",pm.iterationData.get(\"name\"));\r",
									"console.log(pm.collectionVariables.get(\"user_name\"));\r",
									"pm.collectionVariables.set(\"type_name\",pm.iterationData.get(\"type\"));\r",
									"pm.collectionVariables.set(\"price_name\", pm.iterationData.get(\"price\"));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0cdd5f53-397d-4e57-bc20-3d91fcd713f8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{user_name}}\",\r\n    \"type\": \"{{type_name}}\",\r\n    \"price\": {{price_name}},\r\n    \"upc\": \"{{upc_name}}\",\r\n    \"shipping\": 0,\r\n    \"description\": \"Compatible with select electronic devices; AA size; DURALOCK Power Preserve technology; 8-pack\",\r\n    \"manufacturer\": \"Duracell\",\r\n    \"model\": \"MN1500B8Z\",\r\n    \"url\": \"http://www.bestbuy.com/site/duracell-aa-batteries-8-pack/127687.p?id=1051384045676&skuId=127687&cmp=RMXCC\",\r\n    \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1276/127687_sa.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "ID validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f80813d-8878-4375-8dc5-1843507e28a1",
								"exec": [
									"const jsonDate2 = pm.response.json();",
									"console.log(jsonDate2)",
									"const productTid = jsonDate2;",
									"pm.collectionVariables.set(productTid)",
									"",
									"pm.test(\"verify the id login validation\",function(){",
									"    const upcValue = pm.collectionVariables.get('upc');",
									"    const priceValue = responseBody.price; ",
									"    const expectedId = upcValue + priceValue; ",
									"    ",
									"    pm.expect(expectedId).to.eql(productTid); ",
									"});",
									"",
									"//pending lec 5.1"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "33fe4c94-bfcd-4bb9-bfbb-512574ee658a",
								"exec": [
									"//dynamicall generated variables for ups that is settingup the logic\r",
									"\r",
									"const code =( pm.globals.get(\"companyCode\")) ;\r",
									"console.log(code);\r",
									"const value =pm.variables.replaceIn('{{$randomInt}}');//random\r",
									"pm.collectionVariables.set('upc', code+value);\r",
									"pm.collectionVariables.set('user_name', 'Umar');//static value"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c9eaec71-4ed6-4203-afb4-2c1228eda3c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{user_name}}\",\r\n    \"type\": \"mobile\",\r\n    \"price\": 451,\r\n    \"upc\": \"{{upc}}\",\r\n    \"shipping\": 0,\r\n    \"description\": \"Compatible with select electronic devices; AA size; DURALOCK Power Preserve technology; 8-pack\",\r\n    \"manufacturer\": \"Duracell\",\r\n    \"model\": \"MN1500B8Z\",\r\n    \"url\": \"http://www.bestbuy.com/site/duracell-aa-batteries-8-pack/127687.p?id=1051384045676&skuId=127687&cmp=RMXCC\",\r\n    \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1276/127687_sa.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/products"
					},
					"response": []
				},
				{
					"name": "delete product",
					"id": "69789979-3690-40a7-9f56-e22d3fd801d5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 45\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products?id={{product_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "{{product_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete product",
					"id": "8d61da97-4756-4166-8295-ea21d924e196",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"price\": 45\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/products?id=9999990",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "id",
									"value": "9999990"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verify message and schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									"// const responseBodyD = pm.response.json();\r",
									"\r",
									"// pm.test(\"test the code/response message after post \", function(){\r",
									"// pm.response.to.have.status(500);\r",
									"// pm.expect(responseBodyD).to.have.property('error');\r",
									"// pm.expect(responseBodyD.error).to.eql('Email address already exists')\r",
									"\r",
									"\r",
									"// });\r",
									"\r",
									"const validateSchema={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"msg\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"msg\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"\r",
									"\r",
									"const responseBodyD = pm.response.json();\r",
									"pm.test(\"verify the response message after post request \", function(){\r",
									"pm.expect(responseBodyD).to.have.property('msg');\r",
									"pm.expect(responseBodyD.msg).to.eql(\"Student added\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "54386b2e-bed8-4af3-8713-c14f67c19250",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"firstName\": \"nanncy1\",\r\n        \"lastName\": \"kevin1\",\r\n        \"email\": \"test2dcffcdd2d@gmail.com\",\r\n        \"programme\": \"CS\",\r\n        \"courses\": [\r\n            \"IT\",\r\n            \"QA\"\r\n        ]\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8090/student/"
					},
					"response": []
				},
				{
					"name": "Error Handlind - 1-Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fff3e51e-cc61-4588-983c-5e9a82320967",
								"exec": [
									"pm.test(\"Email should be deleted successfully\", function() {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.success).to.be.true;\r",
									"    pm.expect(responseJson.message).to.include(\"Email address already exists\");\r",
									"});\r",
									"\r",
									"// Optionally, trigger the next request in collection if you are running a collection runner\r",
									"postman.setNextRequest(\"Add Email\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0f7bec28-aa2c-4714-a624-50a16de75844",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{existingEmail}}\"\r\n//   \"firstName\": \"nanncy1\",\r\n// \"lastName\": \"kevin1\",\r\n// \"programme\": \"CS\"\r\n\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url2}}/student/"
					},
					"response": []
				},
				{
					"name": "Error Handlind - 1-Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1783dd0e-5a95-40ad-ae7c-e08f6d869d3e",
								"exec": [
									"pm.test(\"Email should be added successfully\", function() {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.success).to.be.true;\r",
									"    pm.expect(responseJson.message).to.include(\"added successfully\");\r",
									"});\r",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "41cefb5a-68ad-4c72-a30a-b95da87b6d38",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{newEmail}}\",\r\n\"firstName\": \"nanncy1\",\r\n\"lastName\": \"kevin1\",\r\n\"programme\": \"CS\"\r\n\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url2}}/student/"
					},
					"response": []
				},
				{
					"name": "verify header with assertions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e2b0a59-1e1c-40c9-86a4-6c336b448b70",
								"exec": [
									"const responseBodyD = pm.response.json();\r",
									"\r",
									"pm.test('test the code/response message after post ', function () {\r",
									"    pm.response.to.have.status(500);\r",
									"    pm.expect(responseBodyD).to.have.property('error');\r",
									"    pm.expect(responseBodyD.error).to.eql('Email address already exists');\r",
									"})\r",
									"\r",
									"pm.test(\"Validate the headers values\",function(){\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json;charset=UTF-8\");\r",
									"pm.expect(pm.response.responseTime).to.be.below(1000)\r",
									" pm.expect(pm.response.text()).to.include(\"Email address already exists\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "4650495c-3264-457f-ac37-be2260e5fd3a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"firstName\": \"nanncy1\",\r\n        \"lastName\": \"kevin1\",\r\n        \"email\": \"test2dcffcdd2d@gmail.com\",\r\n        \"programme\": \"CS\",\r\n        \"courses\": [\r\n            \"IT\",\r\n            \"QA\"\r\n        ]\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:8090/student/"
					},
					"response": []
				}
			],
			"id": "843fa981-91d7-4297-8cff-53a25db41b3b"
		},
		{
			"name": "Oauth requests",
			"item": [
				{
					"name": "/connect/token test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13157125-a587-4f9b-8ccd-7628e3b85971",
								"exec": [
									"const jsonDataauth =pm.response.json();\r",
									"const access_token=jsonDataauth.access_token;\r",
									"pm.globals.set(\"access_token\",access_token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "24e93c14-a4f9-42e5-82ed-d5dd39e20559",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"ats.client.user.beta\",\n  \"clientSecret\": \"O2Q6b0S/1DwLj8ZwtgLjcuS0I5Y=\",\n  \"username\": \"Umar\",\n  \"password\": \"kY~eqBy3cjTui%!?97N,cf$8H\",\n  \"apiKey\": \"string\"\n}\n\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{url3}}/connect/token"
					},
					"response": [
						{
							"id": "2348cfc6-a7da-4816-8364-db99277a9fab",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientId\": \"ro.client.user.db1\",\n  \"clientSecret\": \"secret\",\n  \"username\": \"aqeel_2fa\",\n  \"password\": \",A19$yyLsq33~fF5gZ8fl<>9W\",\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "/api/v{{version}}/Department/:id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8dc5458d-4a56-4877-855a-14caad1386e9",
								"exec": [
									"const SchemaStandard2 = {\r",
									"    \"status\": 200,\r",
									"    \"message\": null,\r",
									"    \"resultData\": {\r",
									"        \"id\": 140,\r",
									"        \"departmentName\": \"aPOSTDepartment2\",\r",
									"        \"departmentHead\": \"Jane Smith Jr\",\r",
									"        \"costCentreName\": \"2\",\r",
									"        \"email\": \"postCostCentre2@email.com\"\r",
									"    },\r",
									"    \"errors\": []\r",
									"}\r",
									"\r",
									"pm.test(\"validate the json SchemaStandard2\",function(){\r",
									"pm.response.to.have.jsonSchema(SchemaStandard2)\r",
									"\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "518db824-1f59-4791-8551-f6b8e632ad94",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url3}}/api/v{{version}}/Department/:id",
							"host": [
								"{{url3}}"
							],
							"path": [
								"api",
								"v{{version}}",
								"Department",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "140"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "authimplure",
					"id": "649c2656-1794-4388-a76c-cd852dd71f99",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"useBrowser": false,
								"redirect_uri": "https://oauth.pstmn.io/v1/callback",
								"clientSecret": "8a57d581b95139a73c8964f6fbf094a937eda4bf",
								"clientId": "fce412c707940e2",
								"accessTokenUrl": "https://api.imgur.com/oauth2/token",
								"authUrl": "https://api.imgur.com/oauth2/authorize",
								"grant_type": "authorization_code",
								"tokenName": "Demo Token",
								"addTokenTo": "header"
							}
						},
						"method": "GET",
						"header": [],
						"url": "https://imgur.com/3/account/me/images"
					},
					"response": []
				},
				{
					"name": "GitRequest",
					"id": "f78fe009-71f9-467b-bf6e-ea1711f0f80f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{Git_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "https://api.github.com/user/repos"
					},
					"response": []
				},
				{
					"name": "8-schema_verification",
					"id": "047ca9e9-fb0c-4073-ad4c-ff1bbcb9448c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://rahulshettyacademy.com/Library/GetBook.php?AuthorName=rahul",
							"protocol": "https",
							"host": [
								"rahulshettyacademy",
								"com"
							],
							"path": [
								"Library",
								"GetBook.php"
							],
							"query": [
								{
									"key": "AuthorName",
									"value": "rahul"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "df51edf3-1cbd-4b1f-a13b-90772c203c76"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "37bc4ed7-acb6-4e17-a475-c9f4e20795d3",
				"type": "text/javascript",
				"exec": [
					"// console.log (\"hello world....\"); //print simple text",
					"// let urlVar = pm.variables.get(\"url\"); ",
					"// console.log(\"value for url variable is \"+urlVar); //print base url or set ones",
					"// pm.variables.set(\"set variable POSTMAN\",\"print out this one\");   ",
					"// console.log(pm.variables.get(\"set variable POSTMAN\")); //simplly printout the postman set comman",
					"// let globalvar=pm.globals.get(\"Env\");",
					"// console.log(globalvar);",
					"// let globalvar2 =pm.globals.get(\"Name\");",
					"// console.log(globalvar2);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "39cd3883-bce3-457f-8948-06ed7b6c87b4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8091",
			"type": "string"
		},
		{
			"key": "upc",
			"value": "",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": ""
		},
		{
			"key": "user_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "type_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "price_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "upc_name",
			"value": ""
		},
		{
			"key": "url2",
			"value": "http://localhost:8090",
			"type": "string"
		},
		{
			"key": "newEmail",
			"value": "nanncykevin@gmail.com",
			"type": "string"
		},
		{
			"key": "existingEmail",
			"value": "nanncykevin@gmail.com",
			"type": "string"
		},
		{
			"key": "url3",
			"value": "https://beta.jobtrain.co.uk/openapi",
			"type": "string"
		},
		{
			"key": "version",
			"value": "1",
			"type": "string"
		},
		{
			"key": "Git_token",
			"value": "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",
			"type": "string"
		}
	]
}